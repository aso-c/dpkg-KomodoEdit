#!/usr/bin/make -f
# -*- makefile -*-

# Uncomment this to turn on verbose mode.
export DH_VERBOSE=1

# This has to be exported to make some magic below work.
#export DH_OPTIONS #= -v
export DH_OPTIONS = -v

# The build architecture is the architecture on which debian/rules is run
# and the package build is performed.
# The host architecture is the architecture on which the resulting package
# will be installed and run.
# These are normally the same, but may be different in the case of cross-compilation
# (building packages for one architecture on machines of a different architecture).

# Variables set for cross-compiling:
# build i386 package on amd64 (x86-64) machine
# simply uncomment all variables & use debuild -b -ai386

### architecture on which debian/rules is run and the package build is performed - amd64.
ifeq (DEB_BUILD_ARCH,amd64)
### Target architecture on which the resulting package# will be installed and run i386.
  DEB_HOST_ARCH = i386      # the Debian architecture
  DEB_HOST_ARCH_CPU=i386    # the Debian CPU name
  DEB_HOST_ARCH_OS=linux    # the Debian System name
  DEB_HOST_ARCH_BITS=32
  DEB_HOST_ARCH_ENDIAN=little
  DEB_HOST_GNU_CPU=i686     # the CPU part of DEB_*_GNU_TYPE
  DEB_HOST_GNU_SYSTEM=linux-gnu # the System part of DEB_*_GNU_TYPE
  DEB_HOST_GNU_TYPE=i686-linux-gnu  # the GNU style architecture specification string
  #DEB_HOST_MULTIARCH=i686-linux-gnu
endif

#It is important to understand that the DEB_*_ARCH string
# only determines which Debian architecture we are building on or for.
# It should not be used to get the CPU or system information;
# the DEB_*_ARCH_CPU and DEB_*_ARCH_OS variables should be used for that.
# GNU style variables should generally only be used with upstream build systems.



# Makefile snippet defining the following variables:
#
# DEB_SOURCE: the source package name
# DEB_VERSION: the full version of the package (epoch + upstream vers. + revision)
# DEB_VERSION_EPOCH_UPSTREAM: the package's version without the Debian revision
# DEB_VERSION_UPSTREAM_REVISION: the package's version without the Debian epoch
# DEB_VERSION_UPSTREAM: the package's upstream version
# DEB_DISTRIBUTION: the distribution(s) listed in the current entry of debian/changelog
include /usr/share/dpkg/pkg-info.mk


# запускаем все остальные deb-helper'ы "по умолчанию"
# (про которые мы как раз ничего не знаем):
%:
	dh $@ 

pkg_ext = tar.gz

deb_ = debian
#pkg_root = $(deb_)/openscad
#src_org = $(deb_)/source
#bin_org = $(deb_)/tmp/$(pkg_name)
bin_root = $(deb_)/tmp
#bin_root = debian/tmp
org_pkg := $(shell tar -tzf ../$(DEB_SOURCE)_$(DEB_VERSION_EPOCH_UPSTREAM).orig.$(pkg_ext) | grep -m1 'install\.sh')
org_pkg := $(shell dirname $(org_pkg))

#
##dh_testdir
#override_dh_auto_configure:
#
#	@echo '===>> Expand install package...'
#	mkdir $(bin_root)
#	tar -xzvf ../$(DEB_SOURCE)_$(DEB_VERSION_EPOCH_UPSTREAM).orig.$(pkg_ext) -C $(bin_root)
##	mkdir $(bin_root)/$(org_pkg)        # temporary - only for debugging
#
##override_dh_auto_build: pkg_dir = $(bin_root)/abcdefg
override_dh_auto_build:

	@echo '===>> Expand install package...'
	mkdir $(bin_root)
	tar -xzvf ../$(DEB_SOURCE)_$(DEB_VERSION_EPOCH_UPSTREAM).orig.$(pkg_ext) -C $(bin_root)
#	mkdir -p $(bin_root)/$(org_pkg)        # temporary - only for debugging

#--------------------------------------------------
#	$(bin_root)/$(org_pkg)/install.sh -I debian/$(DEB_SOURCE)/usr -s
#	echo "Listing of debian/komodoedit/usr:\n" > templisting
#	ls debian/$(DEB_SOURCE)/* >> templisting
##  -I, --install-dir <dir>     specify install directory
##  -s, --suppress-shortcut     do NOT install desktop shortcut
#

##dh_auto_test
#
#	@echo '##################################################################################'
#	echo org_pkg dir is: $(bin_root)/$(org_pkg)
#	ls $(bin_root)/${org_pkg}
#	ls $(bin_root)
#	#s $(deb_)
#	@echo '##################################################################################'
#	#cp $(bin_root)/$(org_pkg)/INSTALLDIR/* debian/$(DEB_SOURCE)/usr

override_dh_prep:

	dh_prep --exclude=tmp

# override_dh_prep:
# 
# 	dh_prep
# 	@echo '===>> Expand install package...'
# 	mkdir $(bin_root)
# 	tar -xzvf ../$(DEB_SOURCE)_$(DEB_VERSION_EPOCH_UPSTREAM).orig.$(pkg_ext) -C $(bin_root)
# #	mkdir $(bin_root)/$(org_pkg)        # temporary - only for debugging

#
#inst = cp $(bin_root)/$(pkg_name)/$(1) debian/$(pkg_name)$(2)
#
override_dh_auto_install:
#--------------------------------------------------
	$(bin_root)/$(org_pkg)/install.sh -I debian/$(DEB_SOURCE)/usr -s
	echo "Listing of debian/komodoedit/usr:\n" > templisting
	ls debian/$(DEB_SOURCE)/* >> templisting
#  -I, --install-dir <dir>     specify install directory
#  -s, --suppress-shortcut     do NOT install desktop shortcut

#verride_dh_auto_install:
#
#	@echo '##################################################################################'
#	echo org_pkg dir is: $(bin_root)/$(org_pkg)
#	ls $(bin_root)/${org_pkg}
#	ls $(bin_root)
#	#s $(deb_)
#	@echo '##################################################################################'
#	#cp $(bin_root)/$(org_pkg)/INSTALLDIR/* debian/$(DEB_SOURCE)/usr
#	@echo '###auto_install###################################################################'
#	ls $(deb_)
#	ls $(bin_root)
#	ls `ls -d $(bin_root)/K*`
#	@echo '##################################################################################'
	#cp -r $(bin_root)/$(org_pkg)/INSTALLDIR/* debian/$(DEB_SOURCE)/usr
## Expand package tarball into debian/tmp dir.
#	@echo 'Expand install package...'
#	mkdir $(bin_root)
#	tar xzvf ../$(pkg_name)-$(pkg_ver).$(pkg_arch).$(pkg_ext) -C $(bin_root)
#	mv $(bin_root)/$(pkg_name)-$(pkg_ver) $(bin_root)/$(pkg_name)
#	chmod ugo-x $(bin_root)/$(pkg_name)/share/appdata/*
#	chmod ugo-x $(bin_root)/$(pkg_name)/libraries/MCAD/*.scad
#	chmod ugo-x $(bin_root)/$(pkg_name)/libraries/MCAD/*.txt
#	chmod ugo-x $(bin_root)/$(pkg_name)/libraries/MCAD/*.markdown
#	chmod ugo-x $(bin_root)/$(pkg_name)/libraries/MCAD/TODO
#	chmod ugo-x $(bin_root)/$(pkg_name)/libraries/MCAD/bitmap/*
#	$(call inst,share/appdata/openscad.xml,.sharedmimeinfo)
#
#override_dh_icons:
#	$(call inst,share/appdata/openscad.png,/usr/share/pixmaps/)
#	dh_icons
#
##override_dh_installexamples:
##	$(call inst,examples/*,/usr/share/openscad/examples/)
#
#override_dh_makeshlibs:
## skipped
#
#override_dh_shlibdeps:
## skipped
#
